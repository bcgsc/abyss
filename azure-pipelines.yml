jobs:
- job: linux_gcc12
  pool:
    vmImage: ubuntu-22.04
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y "deb http://us.archive.ubuntu.com/ubuntu bionic main universe security"
      sudo add-apt-repository -y "deb http://us.archive.ubuntu.com/ubuntu bionic-updates main universe restricted"
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc g++ libboost-dev libgtest-dev libopenmpi-dev libsparsehash-dev make pandoc
    displayName: Install common
  - script: sudo apt-get install -qq gcc-12 g++-12
    displayName: Install gcc-12
  - script: |
      wget https://github.com/bcgsc/btllib/releases/download/v1.4.9/btllib-1.4.9.tar.gz
      tar xzf btllib-1.4.9.tar.gz
      cd btllib-1.4.9
      export CC=gcc-12
      export CXX=g++-12
      ./compile
    displayName: Install btllib
  - script: |
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=gcc-12 CXX=g++-12 --with-btllib=/home/vsts/work/1/s/btllib-1.4.9/install"
      ./configure CC=gcc-12 CXX=g++-12 --with-mpi=/usr/lib/openmpi --with-btllib=/home/vsts/work/1/s/btllib-1.4.9/install
      make -j12 distcheck
    displayName: Compiling ABySS with gcc-12

- job: linux_gcc11
  pool:
    vmImage: ubuntu-latest
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y "deb http://us.archive.ubuntu.com/ubuntu bionic main universe security"
      sudo add-apt-repository -y "deb http://us.archive.ubuntu.com/ubuntu bionic-updates main universe restricted"
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc g++ libboost-dev libgtest-dev libopenmpi-dev libsparsehash-dev make pandoc
    displayName: Install common
  - script: sudo apt-get install -qq gcc-11 g++-11
    displayName: Install gcc-11
  - script: |
      wget https://github.com/bcgsc/btllib/releases/download/v1.4.9/btllib-1.4.9.tar.gz
      tar xzf btllib-1.4.9.tar.gz
      cd btllib-1.4.9
      export CC=gcc-11
      export CXX=g++-11
      ./compile
    displayName: Install btllib
  - script: |
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=gcc-11 CXX=g++-11 --with-btllib=/home/vsts/work/1/s/btllib-1.4.9/install"
      ./configure CC=gcc-11 CXX=g++-11 --with-mpi=/usr/lib/openmpi --with-btllib=/home/vsts/work/1/s/btllib-1.4.9/install
      make -j12 distcheck
    displayName: Compiling ABySS with gcc-11

- job: linux_gcc10
  pool:
    vmImage: ubuntu-latest
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y "deb http://us.archive.ubuntu.com/ubuntu bionic main universe security"
      sudo add-apt-repository -y "deb http://us.archive.ubuntu.com/ubuntu bionic-updates main universe restricted"
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc g++ libboost-dev libgtest-dev libopenmpi-dev libsparsehash-dev make pandoc
    displayName: Install common
  - script: sudo apt-get install -qq gcc-10 g++-10
    displayName: Install gcc-10
  - script: |
      wget https://github.com/bcgsc/btllib/releases/download/v1.4.9/btllib-1.4.9.tar.gz
      tar xzf btllib-1.4.9.tar.gz
      cd btllib-1.4.9
      export CC=gcc-10
      export CXX=g++-10
      ./compile
    displayName: Install btllib
  - script: |
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=gcc-10 CXX=g++-10 --with-btllib=/home/vsts/work/1/s/btllib-1.4.9/install"
      ./configure CC=gcc-10 CXX=g++-10 --with-mpi=/usr/lib/openmpi --with-btllib=/home/vsts/work/1/s/btllib-1.4.9/install
      make -j12 distcheck
    displayName: Compiling ABySS with gcc-10

- job: linux_gcc9
  pool:
    vmImage: ubuntu-latest
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y "deb http://us.archive.ubuntu.com/ubuntu bionic main universe security"
      sudo add-apt-repository -y "deb http://us.archive.ubuntu.com/ubuntu bionic-updates main universe restricted"
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc g++ libboost-dev libgtest-dev libopenmpi-dev libsparsehash-dev make pandoc
    displayName: Install common
  - script: sudo apt-get install -qq gcc-9 g++-9
    displayName: Install gcc-9
  - script: |
      wget https://github.com/bcgsc/btllib/releases/download/v1.4.9/btllib-1.4.9.tar.gz
      tar xzf btllib-1.4.9.tar.gz
      cd btllib-1.4.9
      export CC=gcc-9
      export CXX=g++-9
      ./compile
    displayName: Install btllib
  - script: |
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=gcc-9 CXX=g++-9 --with-btllib=/home/vsts/work/1/s/btllib-1.4.9/install"
      ./configure CC=gcc-9 CXX=g++-9 --with-mpi=/usr/lib/openmpi --with-btllib=/home/vsts/work/1/s/btllib-1.4.9/install
      make -j12 distcheck
    displayName: Compiling ABySS with gcc-9


- job: linux_gcc8
  pool:
    vmImage: ubuntu-latest
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y "deb http://us.archive.ubuntu.com/ubuntu bionic main universe security"
      sudo add-apt-repository -y "deb http://us.archive.ubuntu.com/ubuntu bionic-updates main universe restricted"
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc g++ libboost-dev libgtest-dev libopenmpi-dev libsparsehash-dev make pandoc
    displayName: Install common
  - script: sudo apt-get install -qq gcc-8 g++-8
    displayName: Install gcc-8
  - script: |
      wget https://github.com/bcgsc/btllib/releases/download/v1.4.9/btllib-1.4.9.tar.gz
      tar xzf btllib-1.4.9.tar.gz
      cd btllib-1.4.9
      export CC=gcc-8
      export CXX=g++-8
      ./compile
    displayName: Install btllib
  - script: |
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=gcc-8 CXX=g++-8 --with-btllib=/home/vsts/work/1/s/btllib-1.4.9/install"
      ./configure CC=gcc-8 CXX=g++-8 --with-mpi=/usr/lib/openmpi --with-btllib=/home/vsts/work/1/s/btllib-1.4.9/install
      make -j12 distcheck
    displayName: Compiling ABySS with gcc-8

- job: linux_gcc7
  pool:
    vmImage: ubuntu-latest
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y "deb http://us.archive.ubuntu.com/ubuntu bionic main universe security"
      sudo add-apt-repository -y "deb http://us.archive.ubuntu.com/ubuntu bionic-updates main universe restricted"
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc g++ libboost-dev libgtest-dev libopenmpi-dev libsparsehash-dev make pandoc
    displayName: Install common
  - script: sudo apt-get install -qq gcc-7 g++-7
    displayName: Install gcc-7
  - script: |
      wget https://github.com/bcgsc/btllib/releases/download/v1.4.9/btllib-1.4.9.tar.gz
      tar xzf btllib-1.4.9.tar.gz
      cd btllib-1.4.9
      export CC=gcc-7
      export CXX=g++-7
      ./compile
    displayName: Install btllib
  - script: |
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=gcc-7 CXX=g++-7 --with-btllib=/home/vsts/work/1/s/btllib-1.4.9/install"
      ./configure CC=gcc-7 CXX=g++-7 --with-btllib=/home/vsts/work/1/s/btllib-1.4.9/install
      make -j12 distcheck
    displayName: Compiling ABySS with gcc-7

- job:
  displayName: ubuntu-latest
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH
  - script: conda create --yes --quiet --name abyss_CI
    displayName: Create Anaconda environment
  - script: |
      source activate abyss_CI
      conda install --yes -c conda-forge mamba python=3.9
      mamba install --yes -c conda-forge -c bioconda compilers make boost-cpp sparsehash openmpi util-linux perl btllib pandoc
    displayName: Install dependencies
  - script: |
      source activate abyss_CI
      ./autogen.sh
      ./configure
      make -j12 distcheck
    displayName: Compiling ABySS with gcc
    
- job: macos_clang15
  pool:
    vmImage: 'macOS-latest'
  steps:
  - script: |
      set -o errexit -o pipefail
      brew update
      brew reinstall llvm@15 pandoc google-sparsehash boost make automake openmpi perl pandoc ghc cmake meson ninja
    displayName: Install common
  - script: |
      wget https://github.com/bcgsc/btllib/releases/download/v1.4.9/btllib-1.4.9.tar.gz
      tar xzf btllib-1.4.9.tar.gz
      cd btllib-1.4.9
      export PATH=/usr/local/opt/llvm@15/bin:/usr/local/bin:$PATH
      export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      export LDFLAGS=-L/usr/local/opt/llvm@15/lib
      export CPPFLAGS=-I/usr/local/opt/llvm@15/include
      export LDFLAGS="L/usr/local/opt/llvm@15/lib/c++ -Wl,-rpath,/usr/local/opt/llvm@15/lib/c++"
      export CC=clang
      export CXX=clang++
      ./compile
    displayName: Install btllib
  - script: |
      export PATH=/usr/local/opt/llvm@15/bin:/usr/local/bin:$PATH
      export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      export LDFLAGS=-L/usr/local/opt/llvm@15/lib
      export CPPFLAGS=-I/usr/local/opt/llvm@15/include
      export LDFLAGS="-L/usr/local/opt/llvm@15/lib/c++ -Wl,-rpath,/usr/local/opt/llvm@15/lib/c++"
      export CC=clang
      export CXX=clang++
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=clang CXX=clang++ --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install"
      ./configure CC=clang CXX=clang++ --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install
      make -j12 distcheck
    displayName: Compiling ABySS with clang 15

- job: macos_clang14
  pool:
    vmImage: 'macOS-latest'
  steps:
  - script: |
      set -o errexit -o pipefail
      brew update
      brew reinstall llvm@14 pandoc google-sparsehash boost make automake openmpi perl pandoc ghc cmake meson ninja
      export PATH="$(brew --prefix llvm@14)/bin:$PATH"
      ls /usr/local/bin
    displayName: Install common
  - script: |
      wget https://github.com/bcgsc/btllib/releases/download/v1.4.9/btllib-1.4.9.tar.gz
      tar xzf btllib-1.4.9.tar.gz
      cd btllib-1.4.9
      export PATH="/usr/local/opt/llvm@14/bin:/usr/local/bin:$PATH"
      export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      export LDFLAGS=-L/usr/local/opt/llvm@14/lib
      export CPPFLAGS=-I/usr/local/opt/llvm@14/include
      export LDFLAGS="-L/usr/local/opt/llvm@14/lib/c++ -Wl,-rpath,/usr/local/opt/llvm@14/lib/c++"
      export CC=clang
      export CXX=clang++
      ./compile
    displayName: Install btllib
  - script: |
      export PATH=/usr/local/opt/llvm@14/bin:/usr/local/bin:$PATH
      export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      export LDFLAGS=-L/usr/local/opt/llvm@14/lib
      export CPPFLAGS=-I/usr/local/opt/llvm@14/include
      export LDFLAGS="-L/usr/local/opt/llvm@14/lib/c++ -Wl,-rpath,/usr/local/opt/llvm@14/lib/c++"
      export CC=clang
      export CXX=clang++
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=clang CXX=clang++ --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install"
      ./configure CC=clang CXX=clang++ --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install
      make -j12 distcheck
    displayName: Compiling ABySS with clang 14

- job: macos_clang13
  pool:
    vmImage: 'macOS-latest'
  steps:
  - script: |
      set -o errexit -o pipefail
      brew update
      brew reinstall llvm@13 pandoc google-sparsehash boost make automake openmpi perl pandoc ghc cmake meson ninja
    displayName: Install common
  - script: |
      wget https://github.com/bcgsc/btllib/releases/download/v1.4.9/btllib-1.4.9.tar.gz
      tar xzf btllib-1.4.9.tar.gz
      cd btllib-1.4.9
      export PATH=/usr/local/opt/llvm@13/bin:/usr/local/bin:$PATH
      export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      export LDFLAGS=-L/usr/local/opt/llvm@13/lib
      export CPPFLAGS=-I/usr/local/opt/llvm@13/include
      export LDFLAGS="-L/usr/local/opt/llvm@13/lib/c++ -Wl,-rpath,/usr/local/opt/llvm@13/lib/c++"
      export CC=clang
      export CXX=clang++
      ./compile
    displayName: Install btllib
  - script: |
      export PATH=/usr/local/opt/llvm@13/bin:/usr/local/bin:$PATH
      export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      export LDFLAGS=-L/usr/local/opt/llvm@13/lib
      export CPPFLAGS=-I/usr/local/opt/llvm@13/include
      export LDFLAGS="-L/usr/local/opt/llvm@13/lib/c++ -Wl,-rpath,/usr/local/opt/llvm@13/lib/c++"
      export CC=clang
      export CXX=clang++
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=clang CXX=clang++ --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install"
      ./configure CC=clang CXX=clang++ --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install
      make -j12 distcheck
    displayName: Compiling ABySS with clang 13

- job: macos_clang12
  pool:
    vmImage: 'macOS-latest'
  steps:
  - script: |
      set -o errexit -o pipefail
      brew update
      brew reinstall llvm@12 pandoc google-sparsehash boost make automake openmpi perl pandoc ghc cmake meson ninja
    displayName: Install common
  - script: |
      wget https://github.com/bcgsc/btllib/releases/download/v1.4.9/btllib-1.4.9.tar.gz
      tar xzf btllib-1.4.9.tar.gz
      cd btllib-1.4.9
      export PATH=/usr/local/opt/llvm@12/bin:/usr/local/bin:$PATH
      export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      export LDFLAGS=-L/usr/local/opt/llvm@12/lib
      export CPPFLAGS=-I/usr/local/opt/llvm@12/include
      export LDFLAGS="-L/usr/local/opt/llvm@12/lib/c++ -Wl,-rpath,/usr/local/opt/llvm@12/lib/c++"
      export CC=clang
      export CXX=clang++
      ./compile
    displayName: Install btllib
  - script: |
      export PATH=/usr/local/opt/llvm@12/bin:/usr/local/bin:$PATH
      export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      export LDFLAGS=-L/usr/local/opt/llvm@12/lib
      export CPPFLAGS=-I/usr/local/opt/llvm@12/include
      export LDFLAGS="-L/usr/local/opt/llvm@12/lib/c++ -Wl,-rpath,/usr/local/opt/llvm@12/lib/c++"
      export CC=clang
      export CXX=clang++
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=clang CXX=clang++ --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install"
      ./configure CC=clang CXX=clang++ --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install
      make -j12 distcheck
    displayName: Compiling ABySS with clang 12
    
- job: macos_clang11
  pool:
    vmImage: 'macOS-latest'
  steps:
  - script: |
      set -o errexit -o pipefail
      brew update
      brew reinstall llvm@11 pandoc google-sparsehash boost make automake openmpi perl pandoc ghc cmake meson ninja
    displayName: Install common
  - script: |
      wget https://github.com/bcgsc/btllib/releases/download/v1.4.9/btllib-1.4.9.tar.gz
      tar xzf btllib-1.4.9.tar.gz
      cd btllib-1.4.9
      export PATH=/usr/local/opt/llvm@11/bin:/usr/local/bin:$PATH
      export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      export LDFLAGS=-L/usr/local/opt/llvm@11/lib
      export CPPFLAGS=-I/usr/local/opt/llvm@11/include
      export LDFLAGS="-L/usr/local/opt/llvm@11/lib/c++ -Wl,-rpath,/usr/local/opt/llvm@11/lib/c++"
      export CC=clang
      export CXX=clang++
      ./compile
    displayName: Install btllib
  - script: |
      export PATH=/usr/local/opt/llvm@11/bin:/usr/local/bin:$PATH
      export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      export LDFLAGS=-L/usr/local/opt/llvm@11/lib
      export CPPFLAGS=-I/usr/local/opt/llvm@11/include
      export LDFLAGS="-L/usr/local/opt/llvm@11/lib/c++ -Wl,-rpath,/usr/local/opt/llvm@11/lib/c++"
      export CC=clang
      export CXX=clang++
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=clang CXX=clang++ --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install"
      ./configure CC=clang CXX=clang++ --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install
      make -j12 distcheck
    displayName: Compiling ABySS with clang 11

- job: macos_clang10
  pool:
    vmImage: 'macOS-latest'
  steps:
  - script: |
      set -o errexit -o pipefail
      brew update
      brew reinstall llvm@10 pandoc google-sparsehash boost make automake openmpi perl pandoc ghc cmake meson ninja
    displayName: Install common
  - script: |
      wget https://github.com/bcgsc/btllib/releases/download/v1.4.9/btllib-1.4.9.tar.gz
      tar xzf btllib-1.4.9.tar.gz
      cd btllib-1.4.9
      export PATH=/usr/local/opt/llvm@10/bin:/usr/local/bin:$PATH
      export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      export LDFLAGS=-L/usr/local/opt/llvm@10/lib
      export CPPFLAGS=-I/usr/local/opt/llvm@10/include
      export LDFLAGS="-L/usr/local/opt/llvm@10/lib/c++ -Wl,-rpath,/usr/local/opt/llvm@10/lib/c++"
      export CC=clang
      export CXX=clang++
      ./compile
    displayName: Install btllib
  - script: |
      export PATH=/usr/local/opt/llvm@10/bin:/usr/local/bin:$PATH
      export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      export LDFLAGS=-L/usr/local/opt/llvm@10/lib
      export CPPFLAGS=-I/usr/local/opt/llvm@10/include
      export LDFLAGS="-L/usr/local/opt/llvm@10/lib/c++ -Wl,-rpath,/usr/local/opt/llvm@10/lib/c++"
      export CC=clang
      export CXX=clang++
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=clang CXX=clang++ --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install"
      ./configure CC=clang CXX=clang++ --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install
      make -j12 distcheck
    displayName: Compiling ABySS with clang 10
    
- job: macos_clang9
  pool:
    vmImage: 'macOS-latest'
  steps:
  - script: |
      set -o errexit -o pipefail
      brew update
      brew reinstall llvm@9 pandoc google-sparsehash boost make automake openmpi perl pandoc ghc cmake meson ninja
    displayName: Install common
  - script: |
      wget https://github.com/bcgsc/btllib/releases/download/v1.4.9/btllib-1.4.9.tar.gz
      tar xzf btllib-1.4.9.tar.gz
      cd btllib-1.4.9
      export PATH=/usr/local/opt/llvm@9/bin:/usr/local/bin:$PATH
      export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      export LDFLAGS=-L/usr/local/opt/llvm@9/lib
      export CPPFLAGS=-I/usr/local/opt/llvm@9/include
      export LDFLAGS="-L/usr/local/opt/llvm@9/lib/c++ -Wl,-rpath,/usr/local/opt/llvm@9/lib/c++"
      export CC=clang
      export CXX=clang++
      ./compile
    displayName: Install btllib
  - script: |
      export PATH=/usr/local/opt/llvm@9/bin:/usr/local/bin:$PATH
      export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      export LDFLAGS=-L/usr/local/opt/llvm@9/lib
      export CPPFLAGS=-I/usr/local/opt/llvm@9/include
      export LDFLAGS="-L/usr/local/opt/llvm@9/lib/c++ -Wl,-rpath,/usr/local/opt/llvm@9/lib/c++"
      export CC=clang
      export CXX=clang++
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=clang CXX=clang++ --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install"
      ./configure CC=clang CXX=clang++ --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install
      make -j12 distcheck
    displayName: Compiling ABySS with clang 9


- job:
  displayName: mac-latest
  pool:
    vmImage: 'macOS-latest'
  steps:
  - script: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH
  - script: conda create --yes --quiet --name abyss_CI
    displayName: Create Anaconda environment
  - script: |
      source activate abyss_CI
      conda install --yes -c conda-forge mamba python=3.9
      mamba install --yes -c conda-forge -c bioconda compilers make boost-cpp sparsehash openmpi automake perl btllib pandoc
    displayName: Install dependencies
  - script: |
      source activate abyss_CI
      ./autogen.sh
      ./configure
      make -j12 distcheck
    displayName: Compiling ABySS with clang
    
- job: macOS_default_gcc
  pool:
    vmImage: macOS-latest
  steps:
  - script: |
      rm -f /usr/local/bin/2to3 # brew is having issues with installing Python
      brew update
      brew install automake boost openmpi google-sparsehash make pandoc ghc
    displayName: Install common
  - script: |
      wget https://github.com/bcgsc/btllib/releases/download/v1.4.9/btllib-1.4.9.tar.gz
      tar xzf btllib-1.4.9.tar.gz
      cd btllib-1.4.9
      ./compile
    displayName: Install btllib
  - script: |
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="--with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install"
      ./configure   --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install
      make -j12 distcheck
    displayName: Compiling ABySS with default gcc

- job: macOS_default_clang
  pool:
    vmImage: macOS-latest
  steps:
  - script: |
      rm -f /usr/local/bin/2to3 # brew is having issues with installing Python
      brew update
      brew install automake boost openmpi google-sparsehash make pandoc ghc llvm
    displayName: Install common
  - script: |
      wget https://github.com/bcgsc/btllib/releases/download/v1.4.9/btllib-1.4.9.tar.gz
      tar xzf btllib-1.4.9.tar.gz
      cd btllib-1.4.9
      export CC=clang
      export CXX=clang++
      ./compile
    displayName: Install btllib
  - script: |
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=clang CXX=clang++ --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install"
      ./configure CC=clang CXX=clang++ --with-btllib=/Users/runner/work/1/s/btllib-1.4.9/install
      make -j12 distcheck
    displayName: Compiling ABySS with default clang

